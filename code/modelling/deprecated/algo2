{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Example Process"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Import Libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from datetime import timedelta\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "plt.rc('font', size=12)\n",
    "import math\n",
    "# Filter out deprecated warnings\n",
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\")\n",
    "\n",
    "import time"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Constant - COPY AND PASTE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "TIME = 'Time (UTC+10)'\n",
    "PRICE = 'Regions VIC Trading Price ($/MWh)'\n",
    "GENERATION = 'Regions VIC Trading Total Intermittent Generation (MW)'\n",
    "DEMAND = 'Regions VIC Operational Demand (MW)'\n",
    "\n",
    "POWER = 300\n",
    "CAPACITY = 580\n",
    "CHARGE_EFF = 90\n",
    "DISCHARGE_EFF = 90\n",
    "MLF = 0.991\n",
    "FIXED_OP = 8.1\n",
    "VAR_OP = 0"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Data Import"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Time (UTC+10)</th>\n",
       "      <th>Period</th>\n",
       "      <th>Regions VIC Trading Price ($/MWh)</th>\n",
       "      <th>Regions VIC Trading Total Intermittent Generation (MW)</th>\n",
       "      <th>Regions VIC Operational Demand (MW)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2018-01-01 00:30:00</td>\n",
       "      <td>1</td>\n",
       "      <td>92.46</td>\n",
       "      <td>131.68</td>\n",
       "      <td>4398</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2018-01-01 01:00:00</td>\n",
       "      <td>2</td>\n",
       "      <td>87.62</td>\n",
       "      <td>119.98</td>\n",
       "      <td>4238</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2018-01-01 01:30:00</td>\n",
       "      <td>3</td>\n",
       "      <td>73.08</td>\n",
       "      <td>123.86</td>\n",
       "      <td>4112</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2018-01-01 02:00:00</td>\n",
       "      <td>4</td>\n",
       "      <td>70.18</td>\n",
       "      <td>132.72</td>\n",
       "      <td>3956</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2018-01-01 02:30:00</td>\n",
       "      <td>5</td>\n",
       "      <td>67.43</td>\n",
       "      <td>120.73</td>\n",
       "      <td>3833</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2018-01-01 03:00:00</td>\n",
       "      <td>6</td>\n",
       "      <td>66.31</td>\n",
       "      <td>128.69</td>\n",
       "      <td>3749</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2018-01-01 03:30:00</td>\n",
       "      <td>7</td>\n",
       "      <td>67.72</td>\n",
       "      <td>122.97</td>\n",
       "      <td>3702</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2018-01-01 04:00:00</td>\n",
       "      <td>8</td>\n",
       "      <td>65.50</td>\n",
       "      <td>116.66</td>\n",
       "      <td>3688</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2018-01-01 04:30:00</td>\n",
       "      <td>9</td>\n",
       "      <td>64.50</td>\n",
       "      <td>125.17</td>\n",
       "      <td>3700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2018-01-01 05:00:00</td>\n",
       "      <td>10</td>\n",
       "      <td>65.41</td>\n",
       "      <td>112.73</td>\n",
       "      <td>3701</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2018-01-01 05:30:00</td>\n",
       "      <td>11</td>\n",
       "      <td>63.66</td>\n",
       "      <td>126.54</td>\n",
       "      <td>3721</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2018-01-01 06:00:00</td>\n",
       "      <td>12</td>\n",
       "      <td>59.90</td>\n",
       "      <td>149.29</td>\n",
       "      <td>3731</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2018-01-01 06:30:00</td>\n",
       "      <td>13</td>\n",
       "      <td>64.67</td>\n",
       "      <td>159.90</td>\n",
       "      <td>3786</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2018-01-01 07:00:00</td>\n",
       "      <td>14</td>\n",
       "      <td>66.89</td>\n",
       "      <td>155.03</td>\n",
       "      <td>3811</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2018-01-01 07:30:00</td>\n",
       "      <td>15</td>\n",
       "      <td>67.06</td>\n",
       "      <td>124.56</td>\n",
       "      <td>3776</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2018-01-01 08:00:00</td>\n",
       "      <td>16</td>\n",
       "      <td>67.49</td>\n",
       "      <td>105.21</td>\n",
       "      <td>3802</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2018-01-01 08:30:00</td>\n",
       "      <td>17</td>\n",
       "      <td>67.12</td>\n",
       "      <td>83.25</td>\n",
       "      <td>3835</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>2018-01-01 09:00:00</td>\n",
       "      <td>18</td>\n",
       "      <td>67.47</td>\n",
       "      <td>66.24</td>\n",
       "      <td>3829</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>2018-01-01 09:30:00</td>\n",
       "      <td>19</td>\n",
       "      <td>71.02</td>\n",
       "      <td>73.56</td>\n",
       "      <td>3856</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>2018-01-01 10:00:00</td>\n",
       "      <td>20</td>\n",
       "      <td>71.08</td>\n",
       "      <td>84.96</td>\n",
       "      <td>3846</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>2018-01-01 10:30:00</td>\n",
       "      <td>21</td>\n",
       "      <td>71.13</td>\n",
       "      <td>64.00</td>\n",
       "      <td>3833</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>2018-01-01 11:00:00</td>\n",
       "      <td>22</td>\n",
       "      <td>74.86</td>\n",
       "      <td>81.70</td>\n",
       "      <td>3834</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>2018-01-01 11:30:00</td>\n",
       "      <td>23</td>\n",
       "      <td>72.45</td>\n",
       "      <td>113.44</td>\n",
       "      <td>3844</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>2018-01-01 12:00:00</td>\n",
       "      <td>24</td>\n",
       "      <td>66.51</td>\n",
       "      <td>122.39</td>\n",
       "      <td>3865</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>2018-01-01 12:30:00</td>\n",
       "      <td>25</td>\n",
       "      <td>64.77</td>\n",
       "      <td>129.18</td>\n",
       "      <td>3871</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>2018-01-01 13:00:00</td>\n",
       "      <td>26</td>\n",
       "      <td>70.02</td>\n",
       "      <td>118.18</td>\n",
       "      <td>3888</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>2018-01-01 13:30:00</td>\n",
       "      <td>27</td>\n",
       "      <td>76.04</td>\n",
       "      <td>132.45</td>\n",
       "      <td>3941</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>2018-01-01 14:00:00</td>\n",
       "      <td>28</td>\n",
       "      <td>76.80</td>\n",
       "      <td>136.74</td>\n",
       "      <td>4022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>2018-01-01 14:30:00</td>\n",
       "      <td>29</td>\n",
       "      <td>76.77</td>\n",
       "      <td>142.04</td>\n",
       "      <td>4118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>2018-01-01 15:00:00</td>\n",
       "      <td>30</td>\n",
       "      <td>73.21</td>\n",
       "      <td>121.60</td>\n",
       "      <td>4241</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63427</th>\n",
       "      <td>2021-08-14 09:30:00</td>\n",
       "      <td>19</td>\n",
       "      <td>8.11</td>\n",
       "      <td>96.55</td>\n",
       "      <td>4855</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63428</th>\n",
       "      <td>2021-08-14 10:00:00</td>\n",
       "      <td>20</td>\n",
       "      <td>7.45</td>\n",
       "      <td>99.63</td>\n",
       "      <td>4557</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63429</th>\n",
       "      <td>2021-08-14 10:30:00</td>\n",
       "      <td>21</td>\n",
       "      <td>-15.34</td>\n",
       "      <td>104.38</td>\n",
       "      <td>4306</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63430</th>\n",
       "      <td>2021-08-14 11:00:00</td>\n",
       "      <td>22</td>\n",
       "      <td>-28.53</td>\n",
       "      <td>107.85</td>\n",
       "      <td>4047</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63431</th>\n",
       "      <td>2021-08-14 11:30:00</td>\n",
       "      <td>23</td>\n",
       "      <td>-26.68</td>\n",
       "      <td>121.03</td>\n",
       "      <td>3887</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63432</th>\n",
       "      <td>2021-08-14 12:00:00</td>\n",
       "      <td>24</td>\n",
       "      <td>-39.92</td>\n",
       "      <td>152.91</td>\n",
       "      <td>3780</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63433</th>\n",
       "      <td>2021-08-14 12:30:00</td>\n",
       "      <td>25</td>\n",
       "      <td>-28.03</td>\n",
       "      <td>191.67</td>\n",
       "      <td>3856</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63434</th>\n",
       "      <td>2021-08-14 13:00:00</td>\n",
       "      <td>26</td>\n",
       "      <td>-27.66</td>\n",
       "      <td>193.06</td>\n",
       "      <td>3971</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63435</th>\n",
       "      <td>2021-08-14 13:30:00</td>\n",
       "      <td>27</td>\n",
       "      <td>-26.66</td>\n",
       "      <td>193.12</td>\n",
       "      <td>4064</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63436</th>\n",
       "      <td>2021-08-14 14:00:00</td>\n",
       "      <td>28</td>\n",
       "      <td>-28.38</td>\n",
       "      <td>232.49</td>\n",
       "      <td>4013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63437</th>\n",
       "      <td>2021-08-14 14:30:00</td>\n",
       "      <td>29</td>\n",
       "      <td>-28.00</td>\n",
       "      <td>201.23</td>\n",
       "      <td>4051</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63438</th>\n",
       "      <td>2021-08-14 15:00:00</td>\n",
       "      <td>30</td>\n",
       "      <td>-18.13</td>\n",
       "      <td>214.33</td>\n",
       "      <td>4146</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63439</th>\n",
       "      <td>2021-08-14 15:30:00</td>\n",
       "      <td>31</td>\n",
       "      <td>-13.06</td>\n",
       "      <td>233.80</td>\n",
       "      <td>4328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63440</th>\n",
       "      <td>2021-08-14 16:00:00</td>\n",
       "      <td>32</td>\n",
       "      <td>2.61</td>\n",
       "      <td>229.20</td>\n",
       "      <td>4549</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63441</th>\n",
       "      <td>2021-08-14 16:30:00</td>\n",
       "      <td>33</td>\n",
       "      <td>26.00</td>\n",
       "      <td>204.71</td>\n",
       "      <td>4752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63442</th>\n",
       "      <td>2021-08-14 17:00:00</td>\n",
       "      <td>34</td>\n",
       "      <td>71.78</td>\n",
       "      <td>189.46</td>\n",
       "      <td>5042</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63443</th>\n",
       "      <td>2021-08-14 17:30:00</td>\n",
       "      <td>35</td>\n",
       "      <td>150.04</td>\n",
       "      <td>174.42</td>\n",
       "      <td>5428</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63444</th>\n",
       "      <td>2021-08-14 18:00:00</td>\n",
       "      <td>36</td>\n",
       "      <td>224.71</td>\n",
       "      <td>147.41</td>\n",
       "      <td>5808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63445</th>\n",
       "      <td>2021-08-14 18:30:00</td>\n",
       "      <td>37</td>\n",
       "      <td>135.95</td>\n",
       "      <td>137.89</td>\n",
       "      <td>6172</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63446</th>\n",
       "      <td>2021-08-14 19:00:00</td>\n",
       "      <td>38</td>\n",
       "      <td>75.24</td>\n",
       "      <td>130.00</td>\n",
       "      <td>6191</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63447</th>\n",
       "      <td>2021-08-14 19:30:00</td>\n",
       "      <td>39</td>\n",
       "      <td>65.91</td>\n",
       "      <td>126.28</td>\n",
       "      <td>6069</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63448</th>\n",
       "      <td>2021-08-14 20:00:00</td>\n",
       "      <td>40</td>\n",
       "      <td>64.56</td>\n",
       "      <td>149.59</td>\n",
       "      <td>5962</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63449</th>\n",
       "      <td>2021-08-14 20:30:00</td>\n",
       "      <td>41</td>\n",
       "      <td>65.99</td>\n",
       "      <td>159.40</td>\n",
       "      <td>5847</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63450</th>\n",
       "      <td>2021-08-14 21:00:00</td>\n",
       "      <td>42</td>\n",
       "      <td>69.13</td>\n",
       "      <td>162.79</td>\n",
       "      <td>5739</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63451</th>\n",
       "      <td>2021-08-14 21:30:00</td>\n",
       "      <td>43</td>\n",
       "      <td>57.92</td>\n",
       "      <td>166.87</td>\n",
       "      <td>5605</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63452</th>\n",
       "      <td>2021-08-14 22:00:00</td>\n",
       "      <td>44</td>\n",
       "      <td>49.93</td>\n",
       "      <td>182.52</td>\n",
       "      <td>5492</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63453</th>\n",
       "      <td>2021-08-14 22:30:00</td>\n",
       "      <td>45</td>\n",
       "      <td>62.86</td>\n",
       "      <td>206.23</td>\n",
       "      <td>5344</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63454</th>\n",
       "      <td>2021-08-14 23:00:00</td>\n",
       "      <td>46</td>\n",
       "      <td>32.26</td>\n",
       "      <td>215.20</td>\n",
       "      <td>5204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63455</th>\n",
       "      <td>2021-08-14 23:30:00</td>\n",
       "      <td>47</td>\n",
       "      <td>25.10</td>\n",
       "      <td>226.95</td>\n",
       "      <td>5268</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63456</th>\n",
       "      <td>2021-08-15 00:00:00</td>\n",
       "      <td>48</td>\n",
       "      <td>8.73</td>\n",
       "      <td>251.75</td>\n",
       "      <td>5244</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>63456 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Time (UTC+10)  Period  Regions VIC Trading Price ($/MWh)  \\\n",
       "1     2018-01-01 00:30:00       1                              92.46   \n",
       "2     2018-01-01 01:00:00       2                              87.62   \n",
       "3     2018-01-01 01:30:00       3                              73.08   \n",
       "4     2018-01-01 02:00:00       4                              70.18   \n",
       "5     2018-01-01 02:30:00       5                              67.43   \n",
       "6     2018-01-01 03:00:00       6                              66.31   \n",
       "7     2018-01-01 03:30:00       7                              67.72   \n",
       "8     2018-01-01 04:00:00       8                              65.50   \n",
       "9     2018-01-01 04:30:00       9                              64.50   \n",
       "10    2018-01-01 05:00:00      10                              65.41   \n",
       "11    2018-01-01 05:30:00      11                              63.66   \n",
       "12    2018-01-01 06:00:00      12                              59.90   \n",
       "13    2018-01-01 06:30:00      13                              64.67   \n",
       "14    2018-01-01 07:00:00      14                              66.89   \n",
       "15    2018-01-01 07:30:00      15                              67.06   \n",
       "16    2018-01-01 08:00:00      16                              67.49   \n",
       "17    2018-01-01 08:30:00      17                              67.12   \n",
       "18    2018-01-01 09:00:00      18                              67.47   \n",
       "19    2018-01-01 09:30:00      19                              71.02   \n",
       "20    2018-01-01 10:00:00      20                              71.08   \n",
       "21    2018-01-01 10:30:00      21                              71.13   \n",
       "22    2018-01-01 11:00:00      22                              74.86   \n",
       "23    2018-01-01 11:30:00      23                              72.45   \n",
       "24    2018-01-01 12:00:00      24                              66.51   \n",
       "25    2018-01-01 12:30:00      25                              64.77   \n",
       "26    2018-01-01 13:00:00      26                              70.02   \n",
       "27    2018-01-01 13:30:00      27                              76.04   \n",
       "28    2018-01-01 14:00:00      28                              76.80   \n",
       "29    2018-01-01 14:30:00      29                              76.77   \n",
       "30    2018-01-01 15:00:00      30                              73.21   \n",
       "...                   ...     ...                                ...   \n",
       "63427 2021-08-14 09:30:00      19                               8.11   \n",
       "63428 2021-08-14 10:00:00      20                               7.45   \n",
       "63429 2021-08-14 10:30:00      21                             -15.34   \n",
       "63430 2021-08-14 11:00:00      22                             -28.53   \n",
       "63431 2021-08-14 11:30:00      23                             -26.68   \n",
       "63432 2021-08-14 12:00:00      24                             -39.92   \n",
       "63433 2021-08-14 12:30:00      25                             -28.03   \n",
       "63434 2021-08-14 13:00:00      26                             -27.66   \n",
       "63435 2021-08-14 13:30:00      27                             -26.66   \n",
       "63436 2021-08-14 14:00:00      28                             -28.38   \n",
       "63437 2021-08-14 14:30:00      29                             -28.00   \n",
       "63438 2021-08-14 15:00:00      30                             -18.13   \n",
       "63439 2021-08-14 15:30:00      31                             -13.06   \n",
       "63440 2021-08-14 16:00:00      32                               2.61   \n",
       "63441 2021-08-14 16:30:00      33                              26.00   \n",
       "63442 2021-08-14 17:00:00      34                              71.78   \n",
       "63443 2021-08-14 17:30:00      35                             150.04   \n",
       "63444 2021-08-14 18:00:00      36                             224.71   \n",
       "63445 2021-08-14 18:30:00      37                             135.95   \n",
       "63446 2021-08-14 19:00:00      38                              75.24   \n",
       "63447 2021-08-14 19:30:00      39                              65.91   \n",
       "63448 2021-08-14 20:00:00      40                              64.56   \n",
       "63449 2021-08-14 20:30:00      41                              65.99   \n",
       "63450 2021-08-14 21:00:00      42                              69.13   \n",
       "63451 2021-08-14 21:30:00      43                              57.92   \n",
       "63452 2021-08-14 22:00:00      44                              49.93   \n",
       "63453 2021-08-14 22:30:00      45                              62.86   \n",
       "63454 2021-08-14 23:00:00      46                              32.26   \n",
       "63455 2021-08-14 23:30:00      47                              25.10   \n",
       "63456 2021-08-15 00:00:00      48                               8.73   \n",
       "\n",
       "       Regions VIC Trading Total Intermittent Generation (MW)  \\\n",
       "1                                                 131.68        \n",
       "2                                                 119.98        \n",
       "3                                                 123.86        \n",
       "4                                                 132.72        \n",
       "5                                                 120.73        \n",
       "6                                                 128.69        \n",
       "7                                                 122.97        \n",
       "8                                                 116.66        \n",
       "9                                                 125.17        \n",
       "10                                                112.73        \n",
       "11                                                126.54        \n",
       "12                                                149.29        \n",
       "13                                                159.90        \n",
       "14                                                155.03        \n",
       "15                                                124.56        \n",
       "16                                                105.21        \n",
       "17                                                 83.25        \n",
       "18                                                 66.24        \n",
       "19                                                 73.56        \n",
       "20                                                 84.96        \n",
       "21                                                 64.00        \n",
       "22                                                 81.70        \n",
       "23                                                113.44        \n",
       "24                                                122.39        \n",
       "25                                                129.18        \n",
       "26                                                118.18        \n",
       "27                                                132.45        \n",
       "28                                                136.74        \n",
       "29                                                142.04        \n",
       "30                                                121.60        \n",
       "...                                                  ...        \n",
       "63427                                              96.55        \n",
       "63428                                              99.63        \n",
       "63429                                             104.38        \n",
       "63430                                             107.85        \n",
       "63431                                             121.03        \n",
       "63432                                             152.91        \n",
       "63433                                             191.67        \n",
       "63434                                             193.06        \n",
       "63435                                             193.12        \n",
       "63436                                             232.49        \n",
       "63437                                             201.23        \n",
       "63438                                             214.33        \n",
       "63439                                             233.80        \n",
       "63440                                             229.20        \n",
       "63441                                             204.71        \n",
       "63442                                             189.46        \n",
       "63443                                             174.42        \n",
       "63444                                             147.41        \n",
       "63445                                             137.89        \n",
       "63446                                             130.00        \n",
       "63447                                             126.28        \n",
       "63448                                             149.59        \n",
       "63449                                             159.40        \n",
       "63450                                             162.79        \n",
       "63451                                             166.87        \n",
       "63452                                             182.52        \n",
       "63453                                             206.23        \n",
       "63454                                             215.20        \n",
       "63455                                             226.95        \n",
       "63456                                             251.75        \n",
       "\n",
       "       Regions VIC Operational Demand (MW)  \n",
       "1                                     4398  \n",
       "2                                     4238  \n",
       "3                                     4112  \n",
       "4                                     3956  \n",
       "5                                     3833  \n",
       "6                                     3749  \n",
       "7                                     3702  \n",
       "8                                     3688  \n",
       "9                                     3700  \n",
       "10                                    3701  \n",
       "11                                    3721  \n",
       "12                                    3731  \n",
       "13                                    3786  \n",
       "14                                    3811  \n",
       "15                                    3776  \n",
       "16                                    3802  \n",
       "17                                    3835  \n",
       "18                                    3829  \n",
       "19                                    3856  \n",
       "20                                    3846  \n",
       "21                                    3833  \n",
       "22                                    3834  \n",
       "23                                    3844  \n",
       "24                                    3865  \n",
       "25                                    3871  \n",
       "26                                    3888  \n",
       "27                                    3941  \n",
       "28                                    4022  \n",
       "29                                    4118  \n",
       "30                                    4241  \n",
       "...                                    ...  \n",
       "63427                                 4855  \n",
       "63428                                 4557  \n",
       "63429                                 4306  \n",
       "63430                                 4047  \n",
       "63431                                 3887  \n",
       "63432                                 3780  \n",
       "63433                                 3856  \n",
       "63434                                 3971  \n",
       "63435                                 4064  \n",
       "63436                                 4013  \n",
       "63437                                 4051  \n",
       "63438                                 4146  \n",
       "63439                                 4328  \n",
       "63440                                 4549  \n",
       "63441                                 4752  \n",
       "63442                                 5042  \n",
       "63443                                 5428  \n",
       "63444                                 5808  \n",
       "63445                                 6172  \n",
       "63446                                 6191  \n",
       "63447                                 6069  \n",
       "63448                                 5962  \n",
       "63449                                 5847  \n",
       "63450                                 5739  \n",
       "63451                                 5605  \n",
       "63452                                 5492  \n",
       "63453                                 5344  \n",
       "63454                                 5204  \n",
       "63455                                 5268  \n",
       "63456                                 5244  \n",
       "\n",
       "[63456 rows x 5 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.read_excel('../../data/market_data.xlsx')\n",
    "data1 = data\n",
    "\n",
    "vic_data = data[['Time (UTC+10)', 'Regions VIC Trading Price ($/MWh)', \n",
    "                 'Regions VIC Trading Total Intermittent Generation (MW)', \n",
    "                 'Regions VIC Operational Demand (MW)']]\n",
    "\n",
    "# Since the first date is at 00:00:00, the first period should be 48\n",
    "period = [48]\n",
    "x = 1\n",
    "while x < len(vic_data):\n",
    "    for i in range(48):\n",
    "        period.append(i+1)\n",
    "        x += 1\n",
    "        \n",
    "vic_data.insert(1, 'Period', period)\n",
    "\n",
    "vic = data[['Time (UTC+10)', 'Regions VIC Trading Price ($/MWh)', \n",
    "                 'Regions VIC Trading Total Intermittent Generation (MW)', \n",
    "                 'Regions VIC Operational Demand (MW)']]\n",
    "\n",
    "vic.insert(1, 'Period', period)\n",
    "vic.drop([0], axis=0)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Find Optimal Discharge and Charge Period - DEPENDS ON WHETHER YOUR ALGO NEEDS THIS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "spot_price = vic.groupby(['Period'])[[PRICE]].mean()\n",
    "\n",
    "MIN_PRICE = spot_price.min()\n",
    "MAX_PRICE = spot_price.max()\n",
    "\n",
    "max_price = 0\n",
    "min_price = 1100\n",
    "max_i = 0\n",
    "min_i = 0\n",
    "\n",
    "#second_max_price = 0\n",
    "#second_min_price = 1000\n",
    "#sec_max_loc = 0\n",
    "#sec_min_loc = 0\n",
    "\n",
    "for i in range(48-6):\n",
    "    curr = spot_price.iloc[i:i+6 ,0].sum()\n",
    "    \n",
    "    if curr < min_price:\n",
    "        #second_min_price = min_price\n",
    "        min_price = curr\n",
    "        #sec_min_loc = min_i\n",
    "        min_i = i\n",
    "        \n",
    "    if curr > max_price:\n",
    "        #second_max_price = max_price\n",
    "        max_price = curr\n",
    "        #sec_max_loc = max_i\n",
    "        max_i = i\n",
    "        \n",
    "max_period = []\n",
    "min_period = []\n",
    "\n",
    "#sec_max_period = []\n",
    "#sec_min_period = []\n",
    "\n",
    "for i in range(6):\n",
    "    max_period.append(max_i + i)\n",
    "    min_period.append(min_i + i)\n",
    "    \n",
    "    #sec_max_period.append(sec_min_loc + i)\n",
    "    #sec_min_period.append(sec_min_loc + i)\n",
    "    \n",
    "behaviour = []\n",
    "for i in range(48):\n",
    "    if i in max_period:\n",
    "        behaviour.append(1)\n",
    "        \n",
    "    elif i in min_period:\n",
    "        behaviour.append(-1)\n",
    "    \n",
    "    else:\n",
    "        behaviour.append(0)\n",
    "        \n",
    "spot_price['Behaviour'] = behaviour\n",
    "\n",
    "# the charge and discharge period are fixed in Algorithm 2, +1 to get their periods\n",
    "charge_period = list(np.asarray(min_period) + 1)\n",
    "discharge_period = list(np.asarray(max_period) + 1)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Run Discharge and Charge Algorithm - CHANGE TO YOUR ALGORITHM HERE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "def run_algo2(period, charge_period, discharge_period):\n",
    "    \"\"\"Run Algorithm 2\"\"\"\n",
    "    raw_power = 0\n",
    "    if period in charge_period:\n",
    "        raw_power = -math.floor(min(POWER,(CAPACITY-opening_cap)/(CHARGE_EFF/100)*2))\n",
    "    elif period in discharge_period:\n",
    "        raw_power = math.floor(min(POWER,opening_cap/(DISCHARGE_EFF/100)*2))\n",
    "    return raw_power"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Helper functions - COPY AND PASTE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "def create_df(train_df):\n",
    "    \"\"\" Create raw_power, dispatch, revenue, opening and closing column\"\"\"\n",
    "    df = train_df[[TIME, 'Period', PRICE]]\n",
    "    df['raw_power'] = np.zeros(len(train_df))\n",
    "    df['dispatch'] = np.zeros(len(train_df))\n",
    "    df['revenue'] = np.zeros(len(train_df))\n",
    "    df['opening'] = np.zeros(len(train_df))\n",
    "    df['closing'] = np.zeros(len(train_df))\n",
    "    # Drop the first row. Not the first period\n",
    "    df = df.drop([0], axis=0)\n",
    "    df['revenue'] = np.nan\n",
    "\n",
    "    return df\n",
    "\n",
    "def get_opencap(index, df):\n",
    "    \"\"\"Get the opening battery capacity per index \"\"\"\n",
    "    if index != 1: #Not the first row\n",
    "        df.at[i,\"opening\"] = df.at[i-1,\"closing\"]\n",
    "    opening_cap = math.ceil(df.at[i, \"opening\"])\n",
    "    return opening_cap\n",
    "\n",
    "def get_dispatch(rawPower):\n",
    "    \"\"\" Get the power dispatched \"\"\"\n",
    "    if rawPower < 0:\n",
    "        eff = 1\n",
    "    else:\n",
    "        eff = DISCHARGE_EFF / 100\n",
    "            \n",
    "    dispatch = round(rawPower / 2 * eff, 0)\n",
    "    return dispatch\n",
    "    \n",
    "def get_closecap(opening_cap, dispatch):\n",
    "    \"\"\"Get the battery closing capacity\"\"\"\n",
    "    if dispatch < 0:\n",
    "        eff = CHARGE_EFF / 100\n",
    "    else:\n",
    "        eff = 100 / DISCHARGE_EFF\n",
    "\n",
    "    closecap = math.ceil(max(0, min((opening_cap - (dispatch * eff)), CAPACITY)))\n",
    "    return closecap\n",
    "    \n",
    "def get_revenue(price, dispatch):\n",
    "    \"\"\" Get the Revenue\"\"\"\n",
    "    if dispatch < 0:\n",
    "        factor = 1/MLF\n",
    "    else:\n",
    "        factor = MLF \n",
    "    revenue = math.ceil(price * dispatch * factor)\n",
    "    return revenue\n",
    "\n",
    "def show_result(df):\n",
    "    print(\"Total revenue in the dataset:\", df[\"revenue\"].sum())\n",
    "    print(\"Total days in the dataset:\", len(df)/48)\n",
    "    print(\"Revenue per day:\", df[\"revenue\"].sum() / (len(df)/48))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Run the entire optimization algorithm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Time Complexity for running: 4.264410972595215s\n"
     ]
    }
   ],
   "source": [
    "start = time.time()\n",
    "\n",
    "df = create_df(vic)\n",
    "    \n",
    "for i in list(df.index):\n",
    "    period = df.at[i, \"Period\"]\n",
    "    price = df.at[i, PRICE]\n",
    "\n",
    "    # Battery Opening Capacity\n",
    "    opening_cap = get_opencap(i, df)\n",
    "\n",
    "    # Raw Power - INSERT YOUR ALGORITHM HERE\n",
    "    rawPower = run_algo2(period, charge_period, discharge_period)\n",
    "    df.at[i, \"raw_power\"] = rawPower\n",
    "\n",
    "    # Market Dispatch\n",
    "    dispatch = get_dispatch(rawPower)\n",
    "    df.at[i,\"dispatch\"] = dispatch\n",
    "\n",
    "    # Closing Capacity\n",
    "    df.at[i,\"closing\"] = get_closecap(opening_cap, dispatch)\n",
    "\n",
    "    # Market Revenue\n",
    "    df.at[i,\"revenue\"] = get_revenue(price, dispatch) \n",
    "\n",
    "end = time.time()\n",
    "print(\"Time Complexity for running: {time_taken}s\".format(time_taken = end-start))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total revenue in the dataset: 55937605.0\n",
      "Total days in the dataset: 1322.0\n",
      "Revenue per day: 42312.86308623298\n"
     ]
    }
   ],
   "source": [
    "show_result(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
